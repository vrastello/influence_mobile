continue!
exit
OfferDetail.within_user_range(user.age, user.gender)
OfferDetail.where('? = ANY (gender)', user.gender).
OfferDetail.within_user_range(user.age, user.gender)
OfferDetail.count
user
continue!
exit
Offer.joins(:offer_details).where(offer_details: { disabled: false }).where("? = ANY (gender)", user.gender).all
Offer.joins(:offer_details).where(offer_details: { disabled: false }).where("? = ANY (gender)", user.gender)
user.gender
Offer.find(36).offer_details
Offer.find(36).offer_details.first.age_group
Offer.find(36).offer_details.count
Offer.find(34).offer_details.first.age_group
Offer.find(34).offer_details
Offer.joins(:offer_details).where(offer_details: { disabled: false }).merge(OfferDetail.within_user_range(user.age, user.gender))
OfferDetail.count
Offer.count
AgeGroup.count
user.age
OfferDetail.find(43).age_group
OfferDetail.find(43)
OfferDetail.pluck(:id)
OfferDetail.first.age_group
OfferDetail.first.gender
OfferDetail.last.age_group
OfferDetail.last.gender
OfferDetail.last.age_group
OfferDetail.all.first.age_group
OfferDetail.all
continue
continue!
exit
user.gender
OfferDetail.within_user_range(user.age, user.gender)
OfferQuery.offer_specific_detail_by_age(user, offer)
OfferQuery.offer_specific_detail_by_age(user, offer).count
user
offer = Offer.first
Offer.first.offer_details
Offer.all.offer_details
Offer.all
Offer
Offer.count
OfferDetail.pluck(:start_age, :end_age)
OfferDetail.pluck(:start_age, end_age)
OfferDetail.pluck(:gender)
user
continue
continue!
continue
user
continue
Offer.find(8).offer_details
Offer.joins(:offer_details).where(offer_details: { disabled: false }).merge(OfferDetail.within_user_range(user.age, user.gender)).order(:title).uniq
Offer.joins(:offer_detail).where(offer_details: { disabled: false }).merge(OfferDetail.within_user_range(user.age, user.gender)).order(:title).uniq
OfferDetail.pluck(:id)
Offer.count
OfferDetail.where(disabled: false).merge(OfferDetail.within_user_range(user.age, user.gender))
OfferDetail.within_user_range(user.age, user.gender)
user
OfferDetail.pluck(:start_age, :end_age)
OfferDetail.pluck(:gender)
q
@relation.all.pluck(:gender)
OfferDetails.all.pluck(:gender)
continue!
exit
e.message
next
step
continue!
exit
User.all
@current_user
continue!
exit
JSON.parse(response.body)
response.body
continue!
exit
response.body
continue!
contineu!
exit
4.years.ago > 5.years.ago
subject.errors
subject.valid?
subject
continue
continue!
exit
birthdate
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
continue
10.years.ago
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
self
user
birthdate
continue
next
birthdate && birthdate <= AgeGroup::MIN_AGE.years.ago
next
birthdate <= AgeGroup::MIN_AGE.years.ago
birthdate
continue
next
step
continue!
q
subject
